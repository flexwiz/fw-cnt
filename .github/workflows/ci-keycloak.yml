name: Continuous Integration for Keycloak

on:
#  release:
#    types: [published]
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - ./keycloak/theme/**
      - ./keycloak/Dockerfile
      - .github/workflows/build-keycloak.yml

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY: "ntdtfr"
  IMAGE_NAME: "keycloak"

jobs:
  build_and_publish_to_registry:
    name: Build and Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    #if: github.repository == 'ntdtfr/common-tools'

    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      # https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images#publishing-images-to-docker-hub
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Generate build ID
        id: prep
        run: |
          branch=${GITHUB_REF##*/}
          sha=${GITHUB_SHA::7}
          ts=$(date +%s)
          echo "::set-output name=BUILD_ID::${branch}-${sha}-${ts}"

      - name: Build Image
        id: docker_build
        uses: docker/build-push-action@v2.4.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          target: production
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.prep.outputs.BUILD_ID }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
