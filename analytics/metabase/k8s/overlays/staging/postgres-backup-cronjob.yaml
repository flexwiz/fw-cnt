---
# overlays/staging/postgres-backup-cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
spec:
  schedule: "0 1 * * *"  # Run at 1am every day
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      backoffLimit: 3
      template:
        spec:
          containers:
          - name: postgres-backup
            image: postgres:13-alpine
            command:
            - /bin/bash
            - -c
            - |
              TIMESTAMP=$(date +%Y%m%d%H%M%S)
              BACKUP_FILE="/backups/metabase-${TIMESTAMP}.sql.gz"

              # Create backup
              pg_dump -h postgres -U $POSTGRES_USER $POSTGRES_DB | gzip > $BACKUP_FILE

              # Cleanup old backups (keep last 30 days)
              find /backups -name "metabase-*.sql.gz" -mtime +30 -delete
            env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: metabase-db-credentials
                  key: database-name
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: metabase-db-credentials
                  key: username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: metabase-db-credentials
                  key: password
            volumeMounts:
            - name: backup-volume
              mountPath: /backups
          restartPolicy: OnFailure
          volumes:
          - name: backup-volume
            persistentVolumeClaim:
              claimName: postgres-backup-pvc
