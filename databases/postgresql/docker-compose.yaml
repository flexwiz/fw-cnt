services:

  postgresql:
    image: postgres:17.4-alpine
    container_name: postgresql
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
        interval: 5s
        timeout: 5s
        retries: 5
    environment:
        POSTGRES_USER: ${username}
        POSTGRES_PASSWORD: ${password}
        POSTGRES_DB: ${database}
        #PGDATA: /data/postgres
        PGDATA: /var/lib/postgresql/data/db-files/
        #TZ: Asia/Tehran
    env_file:
      - path: .env # default
        required: true
      - path: .env.local # optional override
        required: false
    volumes:
        - postgresql-data:/var/lib/postgresql/data/db-files
    ports:
        - "5432:5432"
    restart: unless-stopped
    networks:
        - fw-cnt-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
        - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
        - "${PROMETHEUS_PORT:-9090}:9090"
    restart: unless-stopped
    env_file:
      - path: .env # default
        required: true
      - path: .env-local # optional override
        required: false
    volumes:
        - prometheus/:/etc/prometheus/
        - prometheus:/prometheus
    networks:
          - fw-cnt-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
        - "${GRAFANA_PORT:-3000}:3000"
    environment:
        GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
        GF_USERS_ALLOW_SIGN_UP: false
    env_file:
    - path: .env # default
      required: true
    - path: .env-local # optional override
      required: false
    volumes:
        - grafana:/var/lib/grafana
    networks:
        - fw-cnt-network

  postgresql-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgresql-exporter
    restart: unless-stopped
    ports:
        - "9187:9187"
    environment:
        DATA_SOURCE_NAME: "postgres://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}/${DB_NAME}?sslmode=disable"
    depends_on:
        prometheus:
            condition: service_started
        postgresql:
            condition: service_healthy
    networks:
        - fw-cnt-network

volumes:
  prometheus: {}
  grafana: {}
  postgresql-data: {}
  postgresql-exporter: {}


networks:
  fw-cnt-network:
      driver: bridge
