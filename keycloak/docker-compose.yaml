services:

  keycloak:
    container_name: keycloak
    # image: quay.io/keycloak/keycloak:25.0.4
    # command: "start-dev"
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      # args:
      #   - KEYCLOAK_VERSION=25.0.4
    #command: "--import-realm"
    # restart: 'no'
    # labels:
    #   - 'traefik.enable=true'
    #   - 'traefik.http.services.keycloak.loadbalancer.server.port=8080'
    #   - 'traefik.http.routers.keycloak.entrypoints=http'
    #   - 'traefik.http.routers.keycloak.rule=Host(`sso.localhost`) || Host(`sso.${HOSTNAME}`)'
    #   - 'traefik.http.routers.keycloak.service=keycloak@docker'
    environment:
      # See https://www.keycloak.org/server/all-config
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: false
      # KC_HOSTNAME_STRICT_BACKCHANNEL: false
      # KC_PROXY: edge
      KC_HTTP_PORT: 9000
      KC_HTTPS_PORT: 8443
      KC_HTTP_RELATIVE_PATH: /auth
      # Initializing admin user
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      # https://www.keycloak.org/server/all-config#category-bootstrap_admin
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    ports:
      - 8280:9000
      - 8243:8443
    # Fix: Login errors with mapping external volume
    # volumes:
    #   - ./import:/opt/keycloak/data/import
    #   - ./export:/opt/keycloak/data/export
    #   - ./themes:/opt/keycloak/themes
    #   - ./deployments:/opt/keycloak/standalone/deployments
    networks:
      - keycloak-network
    depends_on:
      - keycloak-db

  keycloak-db:
    container_name: keycloak-db
    image: postgres:13
    restart: unless-stopped
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      PGDATA: /var/lib/postgresql/data/db-files/
    volumes:
      - postgres-data:/var/lib/postgresql/data/db-files
    networks:
      - keycloak-network

volumes:
  postgres-data: {}

networks:
  keycloak-network:
    driver: bridge
