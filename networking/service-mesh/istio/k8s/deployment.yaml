# Ingress Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-ingressgateway
  namespace: istio-system
  labels:
    tier: middleware
    type: gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      app: istio-ingressgateway
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: istio-ingressgateway
    spec:
      serviceAccountName: istio-ingressgateway
      containers:
      - name: istio-proxy
        image: docker.io/istio/proxyv2:1.19.3
        args:
        - proxy
        - router
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --proxyLogLevel=warning
        - --proxyComponentLogLevel=misc:error
        - --log_output_level=all:warning
        env:
        - name: JWT_POLICY
          value: "first-party-jwt"
        - name: PILOT_CERT_PROVIDER
          value: "istiod"
        - name: CA_ADDR
          value: "istiod.istio-system.svc:15012"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: ISTIO_META_WORKLOAD_NAME
          value: "istio-ingressgateway"
        - name: ISTIO_META_OWNER
          value: "kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway"
        - name: ISTIO_META_MESH_ID
          value: "cluster.local"
        - name: TRUST_DOMAIN
          value: "cluster.local"
        ports:
        - containerPort: 15021
          name: status-port
        - containerPort: 8080
          name: http2
        - containerPort: 8443
          name: https
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        volumeMounts:
        - name: istio-certs
          mountPath: /etc/certs
          readOnly: true
        - name: istio-token
          mountPath: /var/run/secrets/tokens
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 15021
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 5
      volumes:
      - name: istio-certs
        secret:
          secretName: istio-certs
          optional: true
      - name: istio-token
        projected:
          sources:
          - serviceAccountToken:
              audience: istio-ca
              expirationSeconds: 43200
              path: istio-token

---
# Ingress Gateway Service
apiVersion: v1
kind: Service
metadata:
  name: istio-ingressgateway
  namespace: istio-system
  labels:
    tier: middleware
    type: gateway
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8080
    name: http2
    protocol: TCP
  - port: 443
    targetPort: 8443
    name: https
    protocol: TCP
  - port: 15021
    targetPort: 15021
    name: status-port
    protocol: TCP
  selector:
    app: istio-ingressgateway

---
# Egress Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-egressgateway
  namespace: istio-system
  labels:
    tier: middleware
    type: gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: istio-egressgateway
  template:
    metadata:
      labels:
        app: istio-egressgateway
    spec:
      serviceAccountName: istio-ingressgateway  # Reuse service account
      containers:
      - name: istio-proxy
        image: docker.io/istio/proxyv2:1.19.3
        args:
        - proxy
        - router
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --proxyLogLevel=warning
        - --proxyComponentLogLevel=misc:error
        env:
        - name: JWT_POLICY
          value: "first-party-jwt"
        - name: PILOT_CERT_PROVIDER
          value: "istiod"
        - name: CA_ADDR
          value: "istiod.istio-system.svc:15012"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: ISTIO_META_WORKLOAD_NAME
          value: "istio-egressgateway"
        - name: ISTIO_META_OWNER
          value: "kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-egressgateway"
        ports:
        - containerPort: 8080
          name: http2
        - containerPort: 8443
          name: https
        resources:
          requests:
            cpu: 300m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
        volumeMounts:
        - name: istio-token
          mountPath: /var/run/secrets/tokens
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 15021
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 5
      volumes:
      - name: istio-token
        projected:
          sources:
          - serviceAccountToken:
              audience: istio-ca
              expirationSeconds: 43200
              path: istio-token

---
# Egress Gateway Service
apiVersion: v1
kind: Service
metadata:
  name: istio-egressgateway
  namespace: istio-system
  labels:
    tier: middleware
    type: gateway
spec:
  type: ClusterIP
  ports:
  - port: 80
    name: http2
    protocol: TCP
  - port: 443
    name: https
    protocol: TCP
  selector:
    app: istio-egressgateway
