# cert-manager/k8s/base/cert-manager/rbac.yaml
---
# Cert-Manager ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager
  labels:
    flexwiz.io/app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/component: controller

---
# Cert-Manager ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager
  labels:
    flexwiz.io/app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/component: controller
rules:
  # Certificate resources
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificates/status", "certificaterequests", "certificaterequests/status"]
    verbs: ["update", "patch", "get", "list", "watch"]

  # Issuers and ClusterIssuers
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers", "issuers/status", "clusterissuers", "clusterissuers/status"]
    verbs: ["update", "patch", "get", "list", "watch"]

  # Secret management
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete", "patch"]

  # Events and configmaps
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]

  # Leader election
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "create", "update", "patch"]

  # Ingress extensions
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses/status"]
    verbs: ["update"]

  # ACME HTTP challenge
  - apiGroups: [""]
    resources: ["pods", "services"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["create", "delete"]

---
# Cert-Manager ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cert-manager
  labels:
    flexwiz.io/app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager
subjects:
  - name: cert-manager
    #namespace: cert-manager
    namespace: fw-security
    kind: ServiceAccount

---
# Webhook ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager-webhook
  labels:
    flexwiz.io/app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/component: webhook

---
# Webhook ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager-webhook
  labels:
    flexwiz.io/app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/component: webhook
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "certificaterequests", "issuers", "clusterissuers"]
    verbs: ["create", "update", "patch"]
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates/status", "certificaterequests/status", "issuers/status", "clusterissuers/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
    verbs: ["create", "update", "patch"]
  - apiGroups: ["apiregistration.k8s.io"]
    resources: ["apiservices"]
    verbs: ["create", "update", "patch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "create", "update", "patch"]

---
# Webhook ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cert-manager-webhook
  labels:
    flexwiz.io/app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/component: webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-webhook
subjects:
  - name: cert-manager-webhook
    #namespace: cert-manager
    namespace: fw-security
    kind: ServiceAccount

---
# CA Injector ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager-cainjector
  namespace: cert-manager
  labels:
    flexwiz.io/app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/component: cainjector

---
# CA Injector ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager-cainjector
  labels:
    flexwiz.io/app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/component: cainjector
rules:
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps", "events"]
    verbs: ["get", "create", "update", "patch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["apiregistration.k8s.io"]
    resources: ["apiservices"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "create", "update", "patch"]

---
# CA Injector ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cert-manager-cainjector
  labels:
    flexwiz.io/app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/component: cainjector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-cainjector
subjects:
  - name: cert-manager-cainjector
    #namespace: cert-manager
    namespace: fw-security
    kind: ServiceAccount
