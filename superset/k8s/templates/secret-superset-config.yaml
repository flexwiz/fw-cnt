---
# Source: superset/templates/secret-superset-config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: superset-config
  # namespace: default
  labels:
    app: superset
    chart: superset-0.12.9
    release: "superset"
    heritage: "Helm"
type: Opaque
stringData:
  superset_config.py: |
    
    import os
    from flask_caching.backends.rediscache import RedisCache
    
    def env(key, default=None):
        return os.getenv(key, default)
    
    # Redis Base URL
    REDIS_BASE_URL=f"{env('REDIS_PROTO')}://{env('REDIS_HOST')}:{env('REDIS_PORT')}"
    
    # Redis URL Params
    REDIS_URL_PARAMS = ""
    
    # Build Redis URLs
    CACHE_REDIS_URL = f"{REDIS_BASE_URL}/{env('REDIS_DB', 1)}{REDIS_URL_PARAMS}"
    CELERY_REDIS_URL = f"{REDIS_BASE_URL}/{env('REDIS_CELERY_DB', 0)}{REDIS_URL_PARAMS}"
    
    MAPBOX_API_KEY = env('MAPBOX_API_KEY', '')
    CACHE_CONFIG = {
          'CACHE_TYPE': 'RedisCache',
          'CACHE_DEFAULT_TIMEOUT': 300,
          'CACHE_KEY_PREFIX': 'superset_',
          'CACHE_REDIS_URL': CACHE_REDIS_URL,
    }
    DATA_CACHE_CONFIG = CACHE_CONFIG
    
    SQLALCHEMY_DATABASE_URI = f"postgresql+psycopg2://{env('DB_USER')}:{env('DB_PASS')}@{env('DB_HOST')}:{env('DB_PORT')}/{env('DB_NAME')}"
    SQLALCHEMY_TRACK_MODIFICATIONS = True
    
    class CeleryConfig:
      imports  = ("superset.sql_lab", )
      broker_url = CELERY_REDIS_URL
      result_backend = CELERY_REDIS_URL
    
    CELERY_CONFIG = CeleryConfig
    RESULTS_BACKEND = RedisCache(
          host=env('REDIS_HOST'),
          port=env('REDIS_PORT'),
          key_prefix='superset_results',
    )
    
    # secret
    # Generate your own secret key for encryption. Use `openssl rand -base64 42` to generate a good key
    SECRET_KEY = 'xw1IeC1mOalbCH2R01OhBWQ5G3LlCi57J8f58DMVBJl9LqV7ExfqiVmy'
  
  superset_init.sh: |
    #!/bin/sh
    set -eu
    echo "Upgrading DB schema..."
    superset db upgrade
    echo "Initializing roles..."
    superset init
    
    echo "Creating admin user..."
    superset fab create-admin \
                    --username admin \
                    --firstname Superset \
                    --lastname Admin \
                    --email admin@ntdt.fr \
                    --password admin \
                    || true
    
    if [ -f "/app/configs/import_datasources.yaml" ]; then
      echo "Importing database connections.... "
      superset import_datasources -p /app/configs/import_datasources.yaml
    fi
  superset_bootstrap.sh: |
    #!/bin/bash
    if [ ! -f ~/bootstrap ]; then echo "Running Superset with uid 0" > ~/bootstrap; fi
